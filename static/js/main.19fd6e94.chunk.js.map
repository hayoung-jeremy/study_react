{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RA8BeA,MAxBf,YAA0D,EAA1CC,GAA2C,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OAC9C,OACI,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,cAAf,UACI,oBAAIA,UAAU,eAAd,SAA8BJ,IAC9B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,SAAd,SACKD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OAAkB,oBAAgBL,UAAU,gBAA1B,SAA2CI,GAAlCC,QAC3C,oBAAGL,UAAU,iBAAb,UAA+BH,EAAQS,MAAM,EAAE,KAA/C,gBC0CDC,G,kNAlDbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAKVC,U,sBAAY,8BAAAC,EAAA,sEAE6BC,IAAMC,IAAI,yEAFvC,gBAEWJ,EAFX,EAEHK,KAAOA,KAAOL,OAGrB,EAAKM,SAAS,CAAEN,SAAQD,WAAU,IALxB,2C,uDAOZ,WACEQ,KAAKN,c,oBAGP,WAAQ,MAEwBM,KAAKT,MAA3BC,EAFF,EAEEA,UAAWC,EAFb,EAEaA,OACnB,OACE,yBAASV,UAAU,YAAnB,SACGS,EACI,qBAAKT,UAAU,SAAf,SACD,sBAAMA,UAAU,eAAhB,2BAGA,qBAAKA,UAAU,SAAf,SACGU,EAAOP,KAAI,SAAAe,GAAK,OACf,cAAC,EAAD,CAEExB,GAAIwB,EAAMxB,GACVC,KAAMuB,EAAMvB,KACZC,MAAOsB,EAAMtB,MACbC,QAASqB,EAAMrB,QACfC,OAAQoB,EAAMC,mBACdpB,OAAQmB,EAAMnB,QANTmB,EAAMxB,e,GAhCX0B,IAAMC,YCDxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.19fd6e94.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./Movie.css\"\r\n\r\n// state를 필요로하지 않을 때는 class component를 사용할 필요가 없음\r\nfunction Movie({id, year, title, summary, poster, genres}){\r\n    return(\r\n        <div className=\"movie\">\r\n            <img src={poster} alt={title} title={title} />\r\n            <div className=\"movie__data\">\r\n                <h3 className=\"movie__title\">{title}</h3>\r\n                <h5 className=\"movie__year\">{year}</h5>\r\n                <ul className=\"genres\">\r\n                    {genres.map((genre, index) => <li key={index} className=\"genres__genre\">{genre}</li>)}</ul>\r\n                <p className=\"movie__summary\">{summary.slice(0,140)}...</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n}\r\n\r\nexport default Movie;","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\n\nimport \"./App.css\";\n\nclass App extends React.Component{\n  state = {\n    isLoading: true,\n    movies: []\n  };\n\n  // 데이터를 가져오는 방식, 즉 axios.get이 느릴수 있으니, rendering 이전에, componentDidMount 사이클에서\n  // async 그리고 await을 사용한다 : await의 작업이 끝날때까지 기다렸다가, async 함수를 실행한다는 뜻\n  getMovies = async () => {\n    // ES6\n    const {data: {data :{movies}}} = await axios.get(\"https://yts-proxy.nomadcoders1.now.sh/list_movies.json?sort_by=rating\");\n\n    //this.setState({movies(from state):movies(from axios)})\n    this.setState({ movies, isLoading:false });\n  }\n  componentDidMount(){\n    this.getMovies();\n  }\n\n  render(){\n    // 매번 this.state를 사용해서 data를 가져오기보다는, ES6 문법을 사용해서 가져온다.\n    const { isLoading, movies } = this.state;\n    return (\n      <section className=\"container\">\n        {isLoading\n          ? (<div className=\"loader\">\n            <span className=\"loader__text\">Loading ...</span>\n          </div>)\n          : (\n            <div className=\"movies\">\n              {movies.map(movie => (\n                <Movie \n                  key={movie.id}\n                  id={movie.id}\n                  year={movie.year}\n                  title={movie.title}\n                  summary={movie.summary}\n                  poster={movie.medium_cover_image}\n                  genres={movie.genres}\n                />\n              ))}\n            </div>\n          )\n        }\n      </section>\n    );\n  }\n\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// StrictMode가 활성화 되어있으면, multiple component를 같이 로딩할 수 있다.\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}